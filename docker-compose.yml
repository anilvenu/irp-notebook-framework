services:
  jupyter:
    build:
      context: .
      dockerfile: Dockerfile.jupyter  
    container_name: irp-notebook
    ports:
      - "8888:8888"
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - PYTHONPATH=/workspace:$PYTHONPATH
      - DB_SERVER=postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-IRP_DB}
      - DB_USER=${DB_USER:-irp_user}
      - DB_PASSWORD=${DB_PASSWORD:-IRP_Pass2024}
    volumes:
      - ./workspace:/workspace
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - irp-network
    restart: unless-stopped
    command: start-notebook.sh --NotebookApp.token='' --NotebookApp.password='' --NotebookApp.notebook_dir='/workspace'    

  postgres:
    image: postgres:15-alpine
    container_name: irp-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${DB_NAME:-IRP_DB}
      - POSTGRES_USER=${DB_USER:-irp_user}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-IRP_Pass2024}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s
    networks:
      - irp-network
    restart: unless-stopped

networks:
  irp-network:
    driver: bridge

volumes:
  postgres-data: