services:
  # Jupyuter Notebook Service
  # This service runs the Jupyter Notebook server with Python environment
  # and connects to the PostgreSQL database service. It mounts the local
  # workspace directory to /home/jovyan in the container for easy access to 
  # notebooks, files and scripts. Dockerfile.jupyter is used to build
  # the image with necessary dependencies and packages.
  jupyter:
    build:
      context: .
      dockerfile: Dockerfile.jupyter  
    container_name: irp-notebook
    ports:
      - "8888:8888"
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - PYTHONPATH=/home/jovyan/workspace
      - DB_SERVER=postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-irp_db}
      - DB_USER=${DB_USER:-irp_user}
      - DB_PASSWORD=${DB_PASSWORD:-irp_pass}
      - RISK_MODELER_BASE_URL=${RISK_MODELER_BASE_URL:-https://api-euw1.rms-ppe.com}
      - RISK_MODELER_API_KEY=${RISK_MODELER_API_KEY:-your_api_key}
    volumes:
      - ./workspace:/home/jovyan/workspace
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - irp-network
    restart: unless-stopped
    command: start-notebook.sh --NotebookApp.token='' --NotebookApp.password='' --NotebookApp.notebook_dir='/home/jovyan'   

  postgres:
    # PostgreSQL Database Service
    # This service runs a PostgreSQL database using the official postgres:15-alpine image.
    # It sets up the database name, user, and password using environment variables
    # or defaults if not provided. The database data is persisted using a Docker volume.
    image: postgres:15-alpine
    container_name: irp-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${DB_NAME:-irp_db}
      - POSTGRES_USER=${DB_USER:-irp_user}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-irp_pass}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s
    networks:
      - irp-network
    restart: unless-stopped

networks:
  irp-network:
    driver: bridge

volumes:
  postgres-data:
  job-files: